services:
  # Cypress test runner
  cypress:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: kong-cypress-tests
    volumes:
      # Mount test results back to host
      - ./cypress/videos:/app/cypress/videos
      - ./cypress/screenshots:/app/cypress/screenshots
    environment:
      - CYPRESS_baseUrl=http://kong-admin:8002
    networks:
      - kong-network
    depends_on:
      - kong-admin
    command: npm run cy:run

  # Kong Database
  kong-database:
    image: postgres:13
    container_name: kong-database
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    ports:
      - "5432:5432"
    networks:
      - kong-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Kong Migrations (run database setup)
  kong-migrations:
    image: kong/kong-gateway
    container_name: kong-migrations
    command: kong migrations bootstrap
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PG_DATABASE: kong
    networks:
      - kong-network
    depends_on:
      kong-database:
        condition: service_healthy
    restart: on-failure

  # Kong Gateway
  kong-admin:
    image: kong/kong-gateway
    container_name: kong-gateway
    restart: on-failure
    user: root
    environment:
      # Logging
      KONG_PROXY_ACCESS_LOG: '/dev/stdout'
      KONG_ADMIN_ACCESS_LOG: '/dev/stdout'
      KONG_PROXY_ERROR_LOG: '/dev/stderr'
      KONG_ADMIN_ERROR_LOG: '/dev/stderr'
      # Database
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PG_DATABASE: kong
      # Enterprise Mode (Critical!)
      KONG_PASSWORD: 'handyshake'
      # Admin GUI
      KONG_ADMIN_GUI_URL: 'http://localhost:8002'
      # Listeners
      KONG_ADMIN_LISTEN: '0.0.0.0:8001, 0.0.0.0:8444 ssl'
      KONG_ADMIN_GUI_LISTEN: 0.0.0.0:8002
      KONG_PROXY_LISTEN: '0.0.0.0:8000, 0.0.0.0:8443 ssl'
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8002:8002"
      - "8443:8443"
      - "8444:8444"
    networks:
      - kong-network
    depends_on:
      kong-database:
        condition: service_healthy
      kong-migrations:
        condition: service_completed_successfully
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  kong-network:
    driver: bridge

